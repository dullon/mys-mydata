22 有限考虑静态成员类

嵌套类分为： 静态成员类
           非静态成员类
           匿名类
           局部类

静态嵌套类，是一种在类之外声明的嵌套类，由于是静态的，所以不经过初始化，就可以通过类名，直接调用。

成员内部类，即该类作为另一个类的成员，因此只有引用另一个类，才能创建这个类。
通常也用于隐藏的实现某个接口，如下面所示，第一种是传统的实现方式，第二种是隐藏了实现接口的实现方式。

局部类，局部类的声明之作用与某个代码块内，因此如果某个声明的类仅仅被一段程序所使用，其他地方再也用不到，就可以用这种实现方式。

匿名内部类，在使用new创建对象时，直接在后面创建它的实现类。

除了静态成员类 后三种 都是内部类
静态成员类 是最简单的嵌套类，所以一般情况优先使用。 但是 生产中也要根据条件进行选择。

23 请不要在新代码中使用原生态类型
泛型：声明中具有一个或多个类型参数的类或者接口。
    原生态类型  List
    无编译前错误提示
    取值需要强转对应类型

    泛型：List<E>
    编译前有错误提示或者警告
    取值时不需要强转，直接获取对应类型

    注 ： 所有泛型 都有对应的原生态类型
原生态类型失掉了泛型在安全性和表述性方面的优势
但即使这样 原生态类型依然存在，主要原因是 早期版本存在量大，并已经根深蒂固，所以要保证其合法使用，即移植兼容性。
无限制的 通配符类型  ？
和原生态类型 相比 通配符 是安全的 所以当不确定类型时 建议使用 ？

24 消除非受检警告

如果无法消除警告，可以用抑制警告注解 来消除警告
该注解可以 选择任意粒度，但 尽可能使用最小粒度，越精确越好。


